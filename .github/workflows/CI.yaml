name: Django Tests with Docker Compose

on:
  push:
  pull_request:

jobs:
  lint:
    name: Verificar formatação e estilo
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Instalar dependências de lint
      run: pip install -r requirements.txt
    
    - name: Checagem de estilo
      run: make check-format
    
    - name: Checagem de linter 
      run: make lint

    - name: Checagem de duplicações
      run: make check-duplicate-code
    
    - name: Checagem de code smells
      run: make check-code-smells


  test:
    name: Rodar testes
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Instalar Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Subir serviços do docker-compose
      run: docker-compose up -d db 

    - name: Aguardar banco ficar pronto
      run: |
        echo "Esperando o banco iniciar..."
        until docker exec $(docker ps -qf "name=db") pg_isready -U postgres; do
          sleep 2
        done

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Rodar migrações e testes
      run: |
        python manage.py migrate
        python manage.py test tests

    - name: Finalizar containers
      if: always()
      run: docker-compose down


  uml:
    name: Gerar diagrama UML
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: pip install -r requirements.txt

      - name: Gerar UML
        run: make uml

      - name: Upload UML Diagrams
        uses: actions/upload-artifact@v4
        with:
          name: uml-diagrams
          path: diagrams/*.png


  sonar:
    name: Análise de Qualidade SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Executar análise SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

